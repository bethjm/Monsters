* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: Areiel, Arial, Helvetica, sans-serif
}

/* THIS IS FOR A ROW 
.flex-container {
    height: 400px; /* can use this when wanting a verticle axis. if there is no height there is nowhere to move them or align them */
    /* display: flex; /* whenever you are using flex box you have to use this. this will set the containers on a horizontal axis */
    /*background-color: light grey;*/
    /*flex-direction: row-reverse; puts the last item first and reverses the rest as well*/
    /* use this on the flex container, not the flex items */
    /* justify-content: end;   pertians to the main axis (with rows it's the right) and pushes everything to the right */
    /* justify content: start; sticks everything to the left */
    /* justify-content: center; aligns things to the center */
    /* justify-content: space-around; takes remaining space and puts it around the elements (spaces things out as much as it can and leaves a buffer of white space on the edges) */
    /* justify-content: between; sticks the elements to the side and puts the space only in between them */
    /* align-items: use this to align veritcally on a cross access. you would need this when you're dealing with a row (not a column) */
    /* align-items: end; puts the elements to the bottom */
    /* align-items: start; puts the elements at the top */
    /* align-items: center; puts them in the center of the page */
/*}

/* THIS IS FOR A COLUMN*/
.flex-container {
    /* height: 500px; */

    /* use this to create a column*/
    /* flex-direction: column; */
    /* background-color: grey; */
    /* justify-content: start; will align them at the top side*/
    /* justify-content: end; aligns them at the bottom of the height */
    /* this is always on the cross access */
    /* align-items: start; /* using start puts the items at the beggining, but for row it's justify-content to do this */
    /* flex-wrap: wrap; if there are a bunch of boxes and they can't fit on the page, this will move them to the next line. it will adjust as you make the page bigger and smaller */
    /* flex-grow: 1; if you want the same width for all the columns */


}
.item {

    flex: 1, 0, 100px; /* this is flex grow, shrink, and basis (where it starts, normally 0) all in one!*/
    /*  if you want the boxes tot ake up the entire space you can just use flex: 1*/
    /* flex-basis: 300px; set on the item and it will be the width of the box when it starts out. basically the same as width, but allows other properties to be used with it */
    /* width: 100px; if you are using flex basis you do not need this */
    height: 100px;
    background: #254de4;
    color: #fff;
    margin: 10px;
    
    /* if you want to center the text in the items */
    display:flex;
    justify-content: center; /* this will center the text at the top */
    align-items: center; /* this will align the words in the middle of the box */

}

/* this is saying that you want to do something to the first item only, not the other items */
.item:nth-of-type(1){
    /* order: 2 this will tell the boxes what order to go in */
    /* flex-grow: 1;this will get this to be smaller than the middle. this will stay consistent as the broswer gets bigger and smaller */
    /* flex-shrink: 1;  */

}

/* this is saying that you want to do something to the second item only, not the other items */
.item:nth-of-type(2){
    /* order: 1 this will tell the boxes what order to go in */
    /* flex-basis: 200px; this would make only this box this size, flex basis will tell this box to not be any smaller than this size and will grow at the rate of what you set it in the flex-grow */
    /* flex-grow: is a factor of the main items size. specified as a single number (1, 2, 3, so on). the defualt of flex grow is 0.*/
    /* flex-grow: 2;this will get the middle one to be really big and the two on the sides to be really small. this will stay consistent as the browser is bigger and smaller */
    /* flex-shrink: 2; as things shirnk it can shrink the boxes at sifferent rates. likely that it won't need to be used often. would likely use a different flex property */

}

/* this is saying that you want to do something to the third item only, not the other items */
.item:nth-of-type(3){
    /* order: 3 this will tell the boxes what order to go */
    /* align-self: end; align-self: tells the element that it is the only one being moved */
    /* flex-grow: 1; this will get this to be smaller than the middle */
    /* flex-shrink: 3; */
}
